name: PR Approval Check

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  approval_check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check if PR is approved
        id: approval_check
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: reviews } = await github.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
            });

            const approvedReviews = reviews.filter(review => review.state === 'APPROVED');
            const requiredReviewers = ["rhsantos3"];  // Lista de aprovadores necessários
            const approvedBy = approvedReviews.map(review => review.user.login);

            if (requiredReviewers.every(reviewer => approvedBy.includes(reviewer))) {
              return { approved: true };
            } else {
              return { approved: false };
            }

      - name: Create "Approval Status" check run
        if: steps.approval_check.outputs.approved == 'false'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const check_run_name = "Approval Status";
            const response = await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: check_run_name,
              head_sha: context.payload.pull_request.head.sha,
              status: "in_progress",
              output: {
                title: "Aguardando aprovação dos revisores",
                summary: "Aguardando as aprovações necessárias para continuar."
              }
            });
            return { check_run_id: response.data.id };

      - name: Mark check as complete if approved
        if: steps.approval_check.outputs.approved == 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const check_run_name = "Approval Status";
            const response = await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: check_run_name,
              head_sha: context.payload.pull_request.head.sha,
              status: "completed",
              conclusion: "success",
              output: {
                title: "Aprovação Concluída",
                summary: "Aprovado por todos os revisores necessários."
              }
            });
